# The little language used here is nothing but syntactic sugar on top of tree calculus.
# Quick reference:
# - Lambda abstractions "\variable body" desugar via abstraction elimination (combinatory logic)
# - Boolean convention:  false = △  and  true = △ △
# - Lists "[ ... ]" desugar to (△ ... (△ ... (△ ... △)))
# - Natural numbers desugar to lists of booleans (binary, LSB as first list element)
# - String constants desugar to lists of natural numbers representing unicode code points
# - ADTs "Foo = Bar | Baz x y" desugar into Scott encoded constructors
# - "$" like in Haskell
# Learn more: https://github.com/lambada-llc/lambada
